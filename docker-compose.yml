version: "3.8"

services:
  #PHP Service
  php:
    build: 
      context: . # current directory
      target: php # target the php service in the dockerfile
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=app
    working_dir: /var/www # where the app is located in the container
    volumes:
      - ./:/var/www # mount the current directory to the container directory to store the code
    ports:
      - 8000:8000 # my port so I can connect to it : docker port
    depends_on:
      - database # depends on the database service, so it needs to wait until the database is up and running

  #Database server 
  database:
    image: mysql:5.7.33
    ports:
      - 3306:3306 # my port so I can connect to it : docker port
    environment:
      MYSQL_DATABASE: realtimechatapp
      MYSQL_USER: root
      MYSQL_PASSWORD: ""
      MYSQL_ROOT_PASSWORD: ""
    volumes:
      - db-data:/var/lib/mysql # where the data is stored in the container
    command: ["--init-file", "/docker-entrypoint-initdb.d/init.sql"] # run the init.sql file to create the database and the tables
  
  #node service
  # node:
  #   build:
  #     context: .
  #     target: node
  #   volumes:
  #     - .:/usr/src
  #     - ./node_modules:/usr/src/node_modules
  #   tty: true
  #   # command: ["npm", "run", "dev"]
  #   depends_on:
  #     - php

volumes:
  db-data: ~